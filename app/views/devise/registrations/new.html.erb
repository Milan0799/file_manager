<div>
  <h3>Sign up</h3>

  <%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
    <div class="form-group">
      <%= f.label :email %>
      <%= f.email_field :email, id: "email", autofocus: true, class: "form-control" %>
      <span id="email-error" style="color: red; display: none;">Email is already taken</span>
    </div>

    <div class="form-group">
      <%= f.label :password %>
      <%= f.password_field :password, id: "password", autocomplete: "new-password", class: "form-control" %>
      <span id="password-error" style="color: red; display: none;">Password must be at least 6 characters long</span>
    </div>

    <div class="form-group">
      <%= f.label :password_confirmation %>
      <%= f.password_field :password_confirmation, id: "password_confirmation", autocomplete: "new-password", class: "form-control" %>
      <span id="password-match-error" style="color: red; display: none;">Passwords do not match</span>
    </div>

    <div class="actions">
      <%= f.submit "Sign up", class: "btn-submit", id: "signup-button" %>
    </div>
  <% end %>

  <div class="text-center links">
    <%= link_to "Log in", new_session_path(resource_name) %>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const signupButton = document.getElementById("signup-button");
    const emailField = document.getElementById("email");
    const passwordField = document.getElementById("password");
    const passwordConfirmationField = document.getElementById("password_confirmation");
    const emailError = document.getElementById("email-error");
    const passwordError = document.getElementById("password-error");
    const passwordMatchError = document.getElementById("password-match-error");

    let emailAvailable = false;

    // Email availability check with AJAX
    emailField.addEventListener("blur", function() {
      const email = emailField.value;

      if (email.trim() !== "") {
        fetch(`/check_email?email=${email}`)
          .then(response => response.json())
          .then(data => {
            if (!data.available) {
              emailError.textContent = data.message;
              emailError.style.display = "block";
              emailAvailable = false;
            } else {
              emailError.style.display = "none";
              emailAvailable = true;
            }
          });
      }
    });

    signupButton.addEventListener("click", function(event) {
      let hasError = false;

      // Password length validation
      if (passwordField.value.length < 6) {
        passwordError.style.display = "block";
        hasError = true;
      } else {
        passwordError.style.display = "none";
      }

      // Password match validation
      if (passwordField.value !== passwordConfirmationField.value) {
        passwordMatchError.style.display = "block";
        hasError = true;
      } else {
        passwordMatchError.style.display = "none";
      }

      // Email availability validation
      if (!emailAvailable) {
        emailError.style.display = "block";
        hasError = true;
      }

      // Prevent form submission if there are errors
      if (hasError) {
        event.preventDefault();
      }
    });
  });
</script>
